name: Staging to digitalocean

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
permissions:
  pull-requests: write
jobs:
  prebuild:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: 72751a83a35bb8b6e2816388ee284d67bc7e0e2a
        run: ./gradlew build --scan
      - name: Upload build reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
            name: build-gradle
            path: target/
  build:
    needs: prebuild
    name: Checkout files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: login
        uses: docker/login-action@v3
        with:
          username: dannyhs
          password: AL@banza06**
      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          tags: dannyhs/propiedades:v1
          push: true

  deploy:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout files
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Get tag name
        uses: olegtarasov/get-tag@v2.1

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN}}

      - name: Provision Droplet and deploy container
        run: doctl compute droplet create "$GIT_TAG_NAME" --image docker-18-04 --size s-1vcpu-1gb --region nyc1 --wait