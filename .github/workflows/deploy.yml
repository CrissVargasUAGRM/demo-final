name: Staging to digitalocean

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
permissions:
  pull-requests: write
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Configuracion JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available
      - name: configuracion  gradlew executable
        run: chmod +x ./gradlew
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: configuracion build gradle
        uses: gradle/gradle-build-action@v2

      - name: Build and analyze sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: 7734da45353a9c8d743a6ff1e5b08d944a35f6fe
        run: ./gradlew build --scan sonar --info  # compilacion
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:10})
      - name: login docker hub
        uses: docker/login-action@v3
        with:
            username: dannyhs
            password: AL@banza06**
      - name: revision archivos
        run: |
          pwd
          ls -lah
      - name: verify files
        run: |
          pwd
          cd CheckInApi/build/libs
          ls -lah
      - name: subir jar
        uses: actions/upload-artifact@v3
        with:
            name: 'Package'
            path: CheckInApi/build/libs
      - name: descargar jar
        uses: actions/download-artifact@v3
        with:
          name: 'Package'
          path: CheckInApi/build/libs
      - name: verificar jar
        run: |
          pwd
          cd CheckInApi/build/libs
          ls -lah
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{secrets.DOCKERHUB_USER}}/${{secrets.REPO_NAME}}:${{steps.vars.outputs.tag}}
      - name: publicar dockerimage to docker hub
        run: docker push dannyhs/propiedades:${{steps.vars.outputs.tag}}

  release:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout files
        uses: actions/checkout@v2

      - name: Get tag name
        uses: olegtarasov/get-tag@v2.1

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Provision Droplet and deploy container
        run: doctl compute droplet create propiedades --image docker-18-04 --size s-1vcpu-1gb --region nyc1 --user-data-file deploy.sh --wait
