name: Staging to digitalocean

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
permissions:
  pull-requests: write
jobs:
  prebuild:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Setup Gradlegit c
        uses: gradle/gradle-build-action@v2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: 72751a83a35bb8b6e2816388ee284d67bc7e0e2a
        run: ./gradlew build --scan
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:10})
      - name: login
        uses: docker/login-action@v3
        with:
            username: dannyhs
            password: AL@banza06**
      - name: Check downloaded artifact
        run: |
          pwd
          ls -lah
      - name: verify files
        run: |
          pwd
          cd CheckInApi/build/libs
          ls -lah
      - run: mkdir staging && cp *.jar staging
      - name: Archive go artifact
        uses: actions/upload-artifact@v3
        with:
            name: 'Package'
            path: CheckInApi/build/libs
      - name: Download go bin artifact
        uses: actions/download-artifact@v3
        with:
          name: 'Package'
          path: CheckInApi/build/libs
      - name: Check downloaded artifact
        run: |
          pwd
          cd CheckInApi/build/libs
          ls -lah
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{secrets.DOCKERHUB_USER}}/${{secrets.REPO_NAME}}:${{steps.vars.outputs.tag}}
      - name: Publish dockerimage to docker hub
        run: docker push dannyhs/propiedades:${{steps.vars.outputs.tag}}